from telegram import Update, Bot, ParseMode
import logging
from core.functions.triggers import trigger_decorator
from core.types import AdminType, Admin, Stock, admin, session
from core.utils import send_async
from core.functions.reply_markup import generate_standard_markup
from enum import Enum
from datetime import datetime

logger = logging.getLogger(__name__)


class StockType(Enum):
    Stock = 0
    TradeBot = 1


def error(bot: Bot, update, error, **kwargs):
    """ Error handling """
    logger.error("An error (%s) occurred: %s"
                 % (type(error), error.message))


def start(bot: Bot, update: Update):
    if update.message.chat.type == 'private':
        send_async(bot, chat_id=update.message.chat.id, text='–ü—Ä–∏–≤–µ—Ç')


@admin()
def admin_panel(bot: Bot, update: Update):
    if update.message.chat.type == 'private':
        send_async(bot, chat_id=update.message.chat.id, text='–î–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–µ—Ç –∞–¥–º–∏–Ω!', reply_markup=generate_standard_markup())


@admin()
def kick(bot: Bot, update: Update):
    bot.leave_chat(update.message.chat.id)


@trigger_decorator
def help_msg(bot: Bot, update):
    admin_user = session.query(Admin).filter_by(user_id=update.message.from_user.id).all()
    global_adm = False
    for adm in admin_user:
        if adm.admin_type == AdminType.FULL.value:
            global_adm = True
            break
    if global_adm:
        send_async(bot, chat_id=update.message.chat.id, text='–ö–æ–º–∞–Ω–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è:\n'
                                                             '/enable_welcome - –í–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n'
                                                             '/disable_welcome - –í—ã–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n'
                                                             '/set_welcome <—Ç–µ–∫—Å—Ç> - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è. '
                                                             '–ú–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å %username% - –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ @username, '
                                                             '–µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ –ò–º—è –§–∞–º–∏–ª–∏—è, %first_name% - –Ω–∞ –∏–º—è, '
                                                             '%last_name% - –Ω–∞ —Ñ–∞–º–∏–ª–∏—é, %id% - –Ω–∞ id\n'
                                                             '/show_welcome - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è '
                                                             '–¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞'
                                                             '\n\n'
                                                             '–ö–æ–º–∞–Ω–¥—ã —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤:\n'
                                                             '/set_trigger <—Ç—Ä–∏–≥–≥–µ—Ä>::<—Å–æ–æ–±—â–µ–Ω–∏–µ> - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, '
                                                             '–∫–æ—Ç–æ—Ä–æ–µ –±–æ—Ç –±—É–¥–µ—Ç –∫–∏–¥–∞—Ç—å –ø–æ —Ç—Ä–∏–≥–≥–µ—Ä—É.\n'
                                                             '/add_trigger <—Ç—Ä–∏–≥–≥–µ—Ä>::<—Å–æ–æ–±—â–µ–Ω–∏–µ> - –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, '
                                                             '–∫–æ—Ç–æ—Ä–æ–µ –±–æ—Ç –±—É–¥–µ—Ç –∫–∏–¥–∞—Ç—å –ø–æ —Ç—Ä–∏–≥–≥–µ—Ä—É, –Ω–æ –Ω–µ –∑–∞–º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ä—ã–π.\n'
                                                             '/del_trigger <—Ç—Ä–∏–≥–≥–µ—Ä> - –£–¥–∞–ª–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ç—Ä–∏–≥–≥–µ—Ä\n'
                                                             '/list_triggers - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã'
                                                             '\n\n'
                                                             '–ö–æ–º–∞–Ω–¥—ã –≥–ª–æ–±–∞–ª–∞–¥–º–∏–Ω–∞:\n'
                                                             '/add_admin <—é–∑–µ—Ä–Ω—ç–π–º> - –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞\n'
                                                             '/del_admin <—é–∑–µ—Ä–Ω—ç–π–º> - –ó–∞–±—Ä–∞—Ç—å –ø—Ä–∏–≤–µ–ª–µ–≥–∏–∏ —É –∞–¥–º–∏–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ '
                                                             '—á–∞—Ç–∞\n'
                                                             '/list_admins - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –º–µ—Å—Ç–Ω—ã—Ö –∞–¥–º–∏–Ω–æ–≤\n'
                                                             '/enable_trigger - –†–∞–∑—Ä–µ—à–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä–∏—Ç—å –≤—Å–µ–º –≤ –≥—Ä—É–ø–ø–µ\n'
                                                             '/disable_trigger - –ó–∞–ø—Ä–µ—Ç–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä–∏—Ç—å –≤—Å–µ–º –≤ –≥—Ä—É–ø–ø–µ')
    elif len(admin_user) != 0:
        send_async(bot, chat_id=update.message.chat.id, text='–ö–æ–º–∞–Ω–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è:\n'
                                                             '/enable_welcome - –í–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n'
                                                             '/disable_welcome - –í—ã–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n'
                                                             '/set_welcome <—Ç–µ–∫—Å—Ç> - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è. '
                                                             '–ú–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å %username% - –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ @username, '
                                                             '–µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ –ò–º—è –§–∞–º–∏–ª–∏—è, %first_name% - –Ω–∞ –∏–º—è, '
                                                             '%last_name% - –Ω–∞ —Ñ–∞–º–∏–ª–∏—é, %id% - –Ω–∞ id\n'
                                                             '/show_welcome - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è '
                                                             '–¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞'
                                                             '\n\n'
                                                             '–ö–æ–º–∞–Ω–¥—ã —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤:\n'
                                                             '/add_trigger <—Ç—Ä–∏–≥–≥–µ—Ä>::<—Å–æ–æ–±—â–µ–Ω–∏–µ> - –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, '
                                                             '–∫–æ—Ç–æ—Ä–æ–µ –±–æ—Ç –±—É–¥–µ—Ç –∫–∏–¥–∞—Ç—å –ø–æ —Ç—Ä–∏–≥–≥–µ—Ä—É, –Ω–æ –Ω–µ –∑–∞–º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ä—ã–π.\n'
                                                             '/list_triggers - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã\n'
                                                             '/enable_trigger - –†–∞–∑—Ä–µ—à–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä–∏—Ç—å –≤—Å–µ–º –≤ –≥—Ä—É–ø–ø–µ\n'
                                                             '/disable_trigger - –ó–∞–ø—Ä–µ—Ç–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä–∏—Ç—å –≤—Å–µ–º –≤ –≥—Ä—É–ø–ø–µ')
    else:
        send_async(bot, chat_id=update.message.chat.id, text='–ö–æ–º–∞–Ω–¥—ã —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤:\n'
                                                             '/list_triggers - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã')


@admin(adm_type=AdminType.GROUP)
def ping(bot: Bot, update: Update):
    send_async(bot, chat_id=update.message.chat.id, text='–ò–¥–∏ –æ—Å–≤–µ–∂–∏—Å—å, @' + update.message.from_user.username + '!')


def get_diff(dict_one, dict_two):
    resource_diff_add = {}
    resource_diff_del = {}
    for key, val in dict_one.items():
        if key in dict_two:
            diff_count = dict_one[key] - dict_two[key]
            if diff_count > 0:
                resource_diff_add[key] = diff_count
            elif diff_count < 0:
                resource_diff_del[key] = diff_count
        else:
            resource_diff_add[key] = val
    for key, val in dict_two.items():
        if key not in dict_one:
            resource_diff_del[key] = -val
    resource_diff_add = sorted(resource_diff_add.items(), key=lambda x: x[0])
    resource_diff_del = sorted(resource_diff_del.items(), key=lambda x: x[0])
    return resource_diff_add, resource_diff_del


def stock_compare(bot: Bot, update: Update, chat_data: dict):
    old_stock = session.query(Stock).filter_by(user_id=update.message.from_user.id,
                                               stock_type=StockType.Stock.value).order_by(Stock.date.desc()).first()
    new_stock = Stock()
    new_stock.stock = update.message.text
    new_stock.stock_type = StockType.Stock.value
    new_stock.user_id = update.message.from_user.id
    new_stock.date = datetime.now()
    session.add(new_stock)
    session.commit()
    if old_stock is not None:
        resources_old = {}
        resources_new = {}
        strings = old_stock.stock.splitlines()
        for string in strings[1:]:
            resource = string.split(' (')
            resource[1] = resource[1][:-1]
            resources_old[resource[0]] = int(resource[1])
        strings = new_stock.stock.splitlines()
        for string in strings[1:]:
            resource = string.split(' (')
            resource[1] = resource[1][:-1]
            resources_new[resource[0]] = int(resource[1])
        resource_diff_add, resource_diff_del = get_diff(resources_new, resources_old)
        msg = 'üì¶<b>–ù–∞–≥—Ä–∞–±–ª–µ–Ω–æ:</b>\n'
        if len(resource_diff_add):
            for key, val in resource_diff_add:
                msg += '{} ({})\n'.format(key, val)
        else:
            msg += '–ù–∏—á–µ–≥–æ\n'
        msg += '\nüì¶<b>–ü–æ—Ç–µ—Ä—è–Ω–æ:</b>\n'
        if len(resource_diff_del):
            for key, val in resource_diff_del:
                msg += '{} ({})\n'.format(key, val)
        else:
            msg += '–ù–∏—á–µ–≥–æ\n'
        send_async(bot, chat_id=update.message.chat.id, text=msg, parse_mode=ParseMode.HTML)
    else:
        send_async(bot, chat_id=update.message.chat.id, text='–ñ–¥—É —Å —á–µ–º —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å...')


def trade_compare(bot: Bot, update: Update, chat_data: dict):
    old_stock = session.query(Stock).filter_by(user_id=update.message.from_user.id,
                                               stock_type=StockType.TradeBot.value).order_by(Stock.date.desc()).first()
    new_stock = Stock()
    new_stock.stock = update.message.text
    new_stock.stock_type = StockType.TradeBot.value
    new_stock.user_id = update.message.from_user.id
    new_stock.date = datetime.now()
    session.add(new_stock)
    session.commit()
    if old_stock is not None:
        items_old = {}
        items_new = {}
        strings = old_stock.stock.splitlines()
        for string in strings:
            if string.startswith('/add_'):
                item = string.split('   ')[1]
                item = item.split(' x ')
                items_old[item[0]] = int(item[1])
        strings = new_stock.stock.splitlines()
        for string in strings:
            if string.startswith('/add_'):
                item = string.split('   ')[1]
                item = item.split(' x ')
                items_new[item[0]] = int(item[1])
        resource_diff_add, resource_diff_del = get_diff(items_new, items_old)
        msg = 'üì¶<b>–ù–∞–≥—Ä–∞–±–ª–µ–Ω–æ:</b>\n'
        if len(resource_diff_add):
            for key, val in resource_diff_add:
                msg += '{} ({})\n'.format(key, val)
        else:
            msg += '–ù–∏—á–µ–≥–æ\n'
        msg += '\nüì¶<b>–ü–æ—Ç–µ—Ä—è–Ω–æ:</b>\n'
        if len(resource_diff_del):
            for key, val in resource_diff_del:
                msg += '{} ({})\n'.format(key, val)
        else:
            msg += '–ù–∏—á–µ–≥–æ\n'
        send_async(bot, chat_id=update.message.chat.id, text=msg, parse_mode=ParseMode.HTML)
    else:
        send_async(bot, chat_id=update.message.chat.id, text='–ñ–¥—É —Å —á–µ–º —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å...')
